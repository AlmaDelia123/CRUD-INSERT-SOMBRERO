<%- include('../partials/__header_vendor') %>
    <style>
        main {
            padding-left: 0;
            padding-top: 5rem;
        }

        @media (min-width: 768px) {
            main {
                padding-left: 15rem;
                padding-top: 5rem;
            }
        }
    </style>
    <main>

        <section id="cantidad_sombreros">
            <div style="width: 80%; margin: auto;" width="400" height="200">
                <center>
                    <h2>Cantidad de sombreros en pedidos</h2>
                </center>
                <canvas id="myChart">

                </canvas>

            </div>
            <div style="width: 80%; margin: auto;" width="400" height="200">

                <canvas id="myChartPie" class="mt-5">

                </canvas>


            </div>

            <!-- Sección de gráficas y estadísticas aquí -->

            <form id="downloadForm" action="/generar-informe" method="post" style="display: none;">
                <!-- Input oculto para enviar los datos de estadísticas al controlador -->
                <input type="hidden" name="data1" value='<%- JSON.stringify(data1) %>'>
                <input type="hidden" name="data2" value='<%- JSON.stringify(data2) %>'>
            </form>

            <button onclick="downloadExcel()">Descargar Informe</button>

            <!-- Resto del contenido de la vista aquí -->




        </section>

        <section id="cantidad_ingresos">
            <div style="width: 80%; margin: auto;" width="400" height="200" class="mt-5">
                <center>
                    <h2>Total de ganancias por sombrero</h2>
                </center>
                <canvas id="myChart2">


                </canvas>
                <!-- <button>Genera Reporte</button> -->
            </div>

            <div style="width: 80%; margin: auto;" width="400" height="200">
                <canvas id="myChart2Pie" class="mt-5">


                </canvas>
                <form action="/generar-informe" method="post">
                    <button type="submit">Generar Informe en Excel</button>
                </form>
            </div>
        </section>


    </main>

    <script>

        function downloadExcel() {
            // Enviar el formulario al controlador al hacer clic en el botón
            document.getElementById('downloadForm').submit();
        }


        /*Datos para graficar Cantidad de sombreros en pedidos*/
        document.addEventListener('DOMContentLoaded', function () {
            // Obtener datos de la página
            const data = <%- JSON.stringify(data1) %>;


            // Definir colores dinámicamente
            const backgroundColors = data.map(() => getRandomColor());
            const borderColors = data.map(() => getRandomColor());

            // Configurar el gráfico
            const ctx = document.getElementById('myChart').getContext('2d');
            const myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: data.map(item => item.nombre_sombrero),
                    datasets: [{
                        label: 'Ventas',
                        data: data.map(item => item.total_registros),
                        backgroundColor: backgroundColors,
                        borderColor: borderColors,
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true, // Comienza desde cero en el eje y
                            stepSize: 1 // Establece el paso para la escala del eje y (puedes ajustarlo según tus necesidades)
                        }
                    }
                }
            });

            // Obtener datos de la página
            const dataPie = <%- JSON.stringify(data1) %>;


            // Definir colores dinámicamente
            const backgroundColorsPie = dataPie.map(() => getRandomColor());
            const borderColorsPie = dataPie.map(() => getRandomColor());

            // Configurar el gráfico
            const ctxPie = document.getElementById('myChartPie').getContext('2d');
            const myChartPie = new Chart(ctxPie, {
                type: 'pie',
                data: {
                    labels: dataPie.map(item => item.nombre_sombrero),
                    datasets: [{
                        label: 'Ventas',
                        data: data.map(item => item.total_registros),
                        backgroundColor: backgroundColorsPie,
                        borderColor: borderColorsPie,
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true, // Comienza desde cero en el eje y
                            stepSize: 1 // Establece el paso para la escala del eje y (puedes ajustarlo según tus necesidades)
                        }
                    }
                }
            });

            /*--------------------------------------FIN----------------------------------*/


            /*-Datos para graficar los datos de las ganancias totales--*/

            // Obtener datos de la página
            const data2 = <%- JSON.stringify(data2) %>;


            // Definir colores dinámicamente
            const backgroundColors2 = data2.map(() => getRandomColor());
            const borderColors2 = data2.map(() => getRandomColor());

            // Configurar el gráfico
            const ctx2 = document.getElementById('myChart2').getContext('2d');
            const myChart2 = new Chart(ctx2, {
                type: 'bar',
                data: {
                    labels: data2.map(item => item.nombre_sombrero),
                    datasets: [{
                        label: 'Ganancias',
                        data: data2.map(item => item.total_ventas),
                        backgroundColor: backgroundColors2,
                        borderColor: borderColors2,
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true, // Comienza desde cero en el eje y
                            stepSize: 1 // Establece el paso para la escala del eje y (puedes ajustarlo según tus necesidades)
                        }
                    }
                }
            });

            // Obtener datos de la página
            const data2Pie = <%- JSON.stringify(data2) %>;


            // Definir colores dinámicamente
            const backgroundColors2Pie = data2Pie.map(() => getRandomColor());
            const borderColors2Pie = data2Pie.map(() => getRandomColor());

            // Configurar el gráfico
            const ctx2Pie = document.getElementById('myChart2Pie').getContext('2d');
            const myChart2Pie = new Chart(ctx2Pie, {
                type: 'pie',
                data: {
                    labels: data2Pie.map(item => item.nombre_sombrero),
                    datasets: [{
                        label: 'Ganancias',
                        data: data2.map(item => item.total_ventas),
                        backgroundColor: backgroundColors2Pie,
                        borderColor: borderColors2Pie,
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true, // Comienza desde cero en el eje y
                            stepSize: 1 // Establece el paso para la escala del eje y (puedes ajustarlo según tus necesidades)
                        }
                    }
                }
            });

        });
        /*--------------------------------------FIN----------------------------------*/





        // Función para generar colores aleatorios para que le asignen a las barras y al pastel
        function getRandomColor() {
            const letters = '0123456789ABCDEF';
            let color = '#';
            for (let i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }
    </script>

    </body>

    </html>