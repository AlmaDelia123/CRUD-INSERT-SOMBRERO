<!-- <%- include ../layouts/cabecera.ejs %> -->
<%- include('../partials/__header_vendor') %>

    <main style="padding-top: 5rem;">
        <br />
        <br />
        <a href="/vendedor/sombreros/crear" class="btn btn-primary" type="button">Crear un nuevo registro</a>
        <br />
        <br />
        <table class="table table-light">
            <thead class="thead-light">
                <tr>
                    <th>#</th>
                    <th>Nombre</th>
                    <th>Imagen</th>
                    <th>Tipo</th>
                    <th>Material</th>
                    <th>Precio</th>
                    <th>Cantidad</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>

                <% for( let sombrero=0; sombrero < sombreros.length; sombrero++ ) { %>
                    <tr>
                        <td>
                            <%=sombreros[sombrero].id%>
                        </td>
                        <td>
                            <%=sombreros[sombrero].nombre%>
                        </td>

                        <td>
                            <img class="img-thumbnail" width="100" src="/images/<%=sombreros[sombrero].imagen%>" alt="">


                        </td>

                        <td>
                            <%=sombreros[sombrero].tipo%>
                        </td>
                        <td>
                            <%=sombreros[sombrero].material%>
                        </td>
                        <td>
                            <%=sombreros[sombrero].precio%>
                        </td>
                        <td>
                            <%=sombreros[sombrero].cantidad%>
                        </td>

                        <td>

                            <div class="btn-group-vertical" role="group" aria-label="Vertical button group">

                                <form class="form-inline" method="get"
                                    action="/vendedor/sombreros/editar/<%=sombreros[sombrero].id%> ">

                                    <button class="btn btn-warning" type="submit">Editar</button>

                                </form>

                            </div>
                            |

                            <div class="btn-group-vertical" role="group" aria-label="Vertical button group">

                                <!-- <form class="form-inline" method="post" 
                                    action="/vendedor/sombreros/eliminar/<%=sombreros[sombrero].id%> "> -->

                                    <a onclick="confirmar('<%= sombreros[sombrero].id %>')" class="btn btn-outline-danger">Eliminar</a>



                                </form>

                            </div>



                        </td>
                    </tr>

                    <% } %>


            </tbody>
        </table>
        <a class="btn btn-primary" href="/vendedor/home">Volver </a>
    </main>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.1/dist/sweetalert2.all.min.js"></script>

<!-- swwet alert para eliminar el registro -->
   <script>
        function confirmar(id) {
        Swal.fire({
            title: "Confirma eliminar el registro?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            cancelButtonText: "Cancelar",
            confirmButtonText: "Confirmar"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/vendedor/sombreros/eliminar/${id}`, {
                    method: 'POST'
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.text(); // Cambiar a text() en lugar de json() para recibir texto
                })
                .then(data => {
                    // Manejar la respuesta si es necesario
                    console.log(data);
                    // Redirigir a la página de sombreros después de eliminar
                    if (data === 'Sombrero eliminado exitosamente') {
                        location.href = '/vendedor/sombreros'; // Redirigir a la página de sombreros
                    }
                })
                .catch(error => {
                    console.error('There has been a problem with your fetch operation:', error);
                    // Manejar errores si es necesario
                });
            }
        });
    }

   </script>   

<!-- sweetAlert completo de el registro, la actualizacion y l cantidad baja del stock  -->
<script>
    // Sweet alert de el registro exitoso 
    // Función para mostrar el Sweet Alert
    function mostrarSweetAlert() {

        const filas = document.querySelectorAll('tbody tr'); // Seleccionar todas las filas de la tabla

        filas.forEach((fila) => {

        const cantidad = parseInt(fila.querySelector('td:nth-child(7)').innerText); // Obtener la cantidad (ajusta el índice si es necesario)
    
        // Verificar si la cantidad es menor que 4
        if (cantidad < 4) {

        fila.style.color = 'red'; // Aplicar color rojo al texto de la fila
        
        Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: 'Registro exitoso',
                        showConfirmButton: false,
                        timer: 1500
                    });

                 }
        });
    }

    // Verifica si la URL tiene el parámetro 'mostrarAlerta' y muestra el Sweet Alert en consecuencia
    const urlParams = new URLSearchParams(window.location.search);
                const mostrarAlerta = urlParams.get('mostrarAlerta');
                if (mostrarAlerta) {
                    window.onload = function () {
                        mostrarSweetAlert();
                    };
                }else{
                    revisarCantidad();
                }

    // SweetAlert para la actualizacion del registro 
    function mostrarSweetAlert2() {

        const filas = document.querySelectorAll('tbody tr'); // Seleccionar todas las filas de la tabla

        filas.forEach((fila) => {

        const cantidad = parseInt(fila.querySelector('td:nth-child(7)').innerText); // Obtener la cantidad (ajusta el índice si es necesario)
    
        // Verificar si la cantidad es menor que 4
        if (cantidad < 4) {

        fila.style.color = 'red'; // Aplicar color rojo al texto de la fila
        
        Swal.fire({
                position: 'center',
                icon: 'success',
                title: 'Registro Actualizado Exitoso!',
                showConfirmButton: false,
                timer: 1500
            });
          }
        });
    }
        // Verifica si la URL tiene el parámetro 'mostrarAlerta' y muestra el Sweet Alert en consecuencia
        const urlParams2 = new URLSearchParams(window.location.search);
        const mostrarAlerta2 = urlParams.get('mostrarAlerta2');
        if (mostrarAlerta2) {
            window.onload = function () {
                mostrarSweetAlert2();
            };
        }else{
            revisarCantidad();
        }

    // Alerta para mostrar que los stokcs en sombreros estan bajos
    // Función para revisar la cantidad y aplicar estilos
    function revisarCantidad() {

        const filas = document.querySelectorAll('tbody tr'); // Seleccionar todas las filas de la tabla

        filas.forEach((fila) => {

            const cantidad = parseInt(fila.querySelector('td:nth-child(7)').innerText); // Obtener la cantidad (ajusta el índice si es necesario)
            
            // Verificar si la cantidad es menor que 4
            if (cantidad < 4) {

                fila.style.color = 'red'; // Aplicar color rojo al texto de la fila
                
                Swal.fire({
                    icon: 'warning',
                    title: 'Revisar productos bajos en cantidad',
                    text: 'Hay productos con cantidad baja. Favor de revisar.',
                    showConfirmButton: false,
                    timer: 3000 // Duración de la alerta
                });
            }
        });
    }

</script>

<%- include ../layouts/cabecera.ejs %>